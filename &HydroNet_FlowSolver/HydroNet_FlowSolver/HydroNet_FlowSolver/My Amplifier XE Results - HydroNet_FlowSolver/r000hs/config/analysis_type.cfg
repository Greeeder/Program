<?xml version="1.0" encoding="UTF-8"?>
<bag xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean" xmlns:double="http://www.intel.com/2001/XMLSchema#double" xmlns:exsl="http://exslt.org/common" xmlns:int="http://www.w3.org/2001/XMLSchema#int" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
 <internal>
  <name>%BasicHotspotsAtypeName</name>
  <shortName>%BasicHotspotsAtypeShortName</shortName>
  <description>%BasicHotspotsAtypeDescription</description>
  <abbreviation>hs</abbreviation>
  <alias>hotspots</alias>
  <int:schemaVersion>1</int:schemaVersion>
  <int:contentVersion>1</int:contentVersion>
  <property name="helpId">configs.analysis_type-hotspots_f1101</property>
 </internal>
 <prerequisites xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <xsl:copy-of select="document('config://analysis_type/include/exprof_prerequisites.xsl')/exprof_prerequisites/*"/>
  <xsl:if test="(exsl:ctx('connectionType', '') = 'mic' or exsl:ctx('connectionType', '') = 'mic-offload')">
   <xsl:value-of select="exsl:error('%ThisAnalysisTypeIsNotApplicable')"/>
  </xsl:if>
  <xsl:if test="exsl:ctx('targetOS', '') = 'MacOSX'">
   <xsl:value-of select="exsl:error('%ThisAnalysisTypeIsNotApplicable')"/>
  </xsl:if>
 </prerequisites>
 <knobs xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <enumKnob id="cpuTimeColoring" displayName="%CPUTimeColoring" cliName="cpu-time-coloring" boolean:visible="false">
   <description>%CPUTimeColoringDescription</description>
   <values>
    <value displayName="%None" cliName="none">none</value>
    <value displayName="%CPUUsage" cliName="cpu-usage">cpuUsage</value>
    <value displayName="%ThreadConcurrency" cliName="thread-concurrency">threadConcurrency</value>
    <defaultValue>none</defaultValue>
   </values>
  </enumKnob>
  <stringKnob id="initialViewpoint" displayName="%InitialViewpoint" boolean:visible="false">
   <defaultValue>%HotspotsByCPUUsageViewpointName</defaultValue>
  </stringKnob>
  <intKnob id="samplingInterval" displayName="%SamplingInterval" cliName="sampling-interval">
   <description>%SamplingIntervalDescription</description>
   <int:min>1</int:min>
   <int:max>1000</int:max>
   <int:defaultValue>10</int:defaultValue>
  </intKnob>
  <booleanKnob id="userTasksEventsCountersCollection" displayName="%UserTasksEventsCountersCollection" boolean:visible="true" cliName="enable-user-tasks">
   <description>%UserTasksEventsCountersCollectionDescription</description>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="gpuUsageCollection" cliName="enable-gpu-usage">
   <xsl:choose>
    <xsl:when test="exsl:ctx('targetOS')='Windows'">
     <xsl:attribute name="displayName">%GpuDXCollection</xsl:attribute>
     <xsl:attribute name="boolean:visible">true</xsl:attribute>
     <description>%GpuDXCollectionDescription</description>
    </xsl:when>
    <xsl:otherwise>
     <xsl:attribute name="displayName">%IGFXFtraceEventsCollection</xsl:attribute>
     <xsl:attribute name="boolean:visible">false</xsl:attribute>
     <xsl:if test="exsl:ctx('targetOS')='Android' or exsl:ctx('targetOS')='Linux' or exsl:ctx('targetOS')='MacOSX'">
      <xsl:attribute name="boolean:visible">true</xsl:attribute>
     </xsl:if>
     <description>%IGFXFtraceEventsCollectionDescription</description>
    </xsl:otherwise>
   </xsl:choose>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <enumKnob id="gpuCountersCollection" displayName="%GpuCountersCollection" cliName="gpu-counters-mode">
   <xsl:attribute name="boolean:visible">
    <xsl:value-of select="exsl:ctx('targetOS')='Windows' or exsl:ctx('targetOS')='Android' or exsl:ctx('targetOS')='Linux' or exsl:ctx('targetOS')='MacOSX'"/>
   </xsl:attribute>
   <description>%GpuCountersCollectionDescription</description>
   <values>
    <value displayName="%None">none</value>
    <value displayName="%GpuOverview">overview</value>
    <value displayName="%GpuComputeBasic">global-local-accesses</value>
    <xsl:if test="exsl:ctx('gpuPlatformIndex', 0)&gt;=6">
     <value displayName="%GpuComputeExtended">compute-extended</value>
    </xsl:if>
    <xsl:if test="exsl:is_experimental('gpu-metrics2')">
     <value displayName="%GpuPreset3">preset3</value>
     <value displayName="%GpuPreset4">preset4</value>
     <value displayName="%GpuPreset5">preset5</value>
    </xsl:if>
    <defaultValue>none</defaultValue>
   </values>
  </enumKnob>
  <booleanKnob id="gpuOpenCLCollection" displayName="%GpuOpenCLCollection" visible="true" cliName="enable-gpu-runtimes">
   <xsl:choose>
    <xsl:when test="exsl:ctx('targetOS', '')='Windows' or exsl:ctx('targetOS', '')='Linux'">
     <description>%GpuOpenCLCollectionDescription</description>
    </xsl:when>
    <xsl:when test="exsl:ctx('targetOS', '')='Android'">
     <xsl:attribute name="displayName">%GPUAndroidRuntimeCollection</xsl:attribute>
     <description>%GPUAndroidRuntimeCollectionDescription</description>
     <experimental>gpu-android-runtimes</experimental>
    </xsl:when>
    <xsl:otherwise>
     <xsl:attribute name="boolean:visible">false</xsl:attribute>
    </xsl:otherwise>
   </xsl:choose>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <doubleKnob id="slowGoodFrameThreshold" displayName="%SlowGoodFrameThreshold" cliName="slow-frames-threshold" boolean:visible="false">
   <description>%SlowGoodFrameThresholdDescription</description>
   <double:min>0.01</double:min>
   <double:max>1024000</double:max>
   <double:defaultValue>40</double:defaultValue>
  </doubleKnob>
  <doubleKnob id="goodFastFrameThreshold" displayName="%GoodFastFrameThreshold" cliName="fast-frames-threshold" boolean:visible="false">
   <description>%GoodFastFrameThresholdDescription</description>
   <double:min>0.01</double:min>
   <double:max>1024000</double:max>
   <double:defaultValue>100</double:defaultValue>
  </doubleKnob>
  <xsl:variable name="commonKnobs" select="document('config://analysis_type/include/knobs.xsl')"/>
  <xsl:copy-of select="$commonKnobs//knobs/booleanKnob[@id='analyzeOpenMPRegions']"/>
 </knobs>
 <analysis xsl:version="1.0" exsl:keep_exsl_namespace="" syntax="norules">
  <xsl:if test="not(exsl:ctx('isTPSSAvailable', 0)) and not(exsl:ctx('isPtraceAvailable', 0))">
   <xsl:value-of select="exsl:error('%RunssBasicHotspotsNotSupported')"/>
  </xsl:if>
  <xsl:if test="exsl:ctx('isPtraceScopeLimited', 0)">
   <xsl:value-of select="exsl:error('%RunssPtraceScopeLimited')"/>
  </xsl:if>
  <collector id="runss">
   <collectorKnob knob="collectSamplesMode">stack</collectorKnob>
   <collectorKnob knob="samplingInterval">
    <xsl:copy-of select="exsl:ctx('samplingInterval', 10)"/>
   </collectorKnob>
   <collectorKnob knob="collectUserTasksEventsCountersMode">
    <xsl:copy-of select="exsl:ctx('userTasksEventsCountersCollection', 0)"/>
   </collectorKnob>
   <collectorKnob knob="gpuCounters">
    <xsl:value-of select="exsl:ctx('gpuCountersCollection', 'none')"/>
   </collectorKnob>
   <collectorKnob knob="gpuUsage">
    <xsl:value-of select="exsl:ctx('gpuUsageCollection', 0)"/>
   </collectorKnob>
   <collectorKnob knob="collectGpuOpenCl">
    <xsl:value-of select="exsl:ctx('gpuOpenCLCollection', 0)"/>
   </collectorKnob>
   <collectorKnob knob="collectOpenMPRegions">
    <xsl:value-of select="exsl:ctx('analyzeOpenMPRegions', 0)"/>
   </collectorKnob>
  </collector>
 </analysis>
</bag>
